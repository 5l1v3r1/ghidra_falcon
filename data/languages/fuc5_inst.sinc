:mov reg0, fimm8s is raw_opcode_hi=0x00 & reg0; fimm8s {
  reg0 = fimm8s;
}

:mov reg0, fimm16s is raw_opcode_hi=0x4 & reg0; fimm16s {
  reg0 = fimm16s;
}

:mov reg0, fimm24s is raw_opcode_hi=0x8 & reg0; fimm24s {
  reg0 = fimm24s;
}

:mov reg0, fimm32 is raw_opcode_hi=0xd & reg0; fimm32 {
 reg0 = fimm32;
}

:call addr16 is raw_opcode=0xf3; addr16 {
  push32(&:4 inst_next);
  call addr16;
}

:iowr [reg1^"+"^offset], reg2 is raw_opcode=0xf6; reg2 & reg1; imm8 [ offset=imm8 * 4; ] {
  # TODO
}

:iowrs [reg1^"+"^offset], reg2 is raw_opcode=0xf7; reg2 & reg1; imm8 [ offset=imm8 * 4; ] {
  # TODO
}